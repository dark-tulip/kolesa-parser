from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

from selenium import webdriver, common
import time
import telegram_channel

browser = webdriver.Chrome()
browser.implicitly_wait(5)

# Pages to parse range
start_page = 150
end_page = 158

# –í—Å–µ car-dictionary —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞ –∑–∞–ø–∞—Ä—Å–µ–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö (1 —Å—Ç—Ä–∞–Ω–∏—Ü–∞ - 20 –º–∞—à–∏–Ω)
all_cars_lst_dic = []
# –¢–æ–ª—å–∫–æ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã–Ω—ã–µ –ø–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞–º
sorted_by_views_dic = []
# —Å–ø–∏—Å–æ–∫ car-dictionary —ç–ª–µ–º–µ–Ω—Ç–æ–≤, —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—Ö –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª
already_send_to_channel = []


def go_to_page(page_number):
    """–ü–µ—Ä–µ—Ö–æ–¥ –≤ –±—Ä–∞—É–∑–µ—Ä–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É page_number –≥. –ê–ª–º–∞—Ç—ã (–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω)"""

    current_link = "https://kolesa.kz/cars/almaty/?page=" + str(page_number)
    browser.get(current_link)
    print(f"----------------------------------- PAGE # {page_number} -----------------------------------")


def console_print_car_data(car_data_dictionary, order=0):
    """–ü—Ä–∏–Ω—Ç-—Ñ–æ—Ä–º–∞ –¥–ª—è –ø–µ—á–∞—Ç–∏ –¥–∞–Ω–Ω—ã—Ö –æ–± –∞–≤—Ç–æ –≤ –∫–æ–Ω—Å–æ–ª–∏, –±–µ—Ä–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ —Å–ª–æ–≤–∞–ª—è car_data_dictionary"""

    car_mark = car_data_dictionary['car_mark']
    car_id = car_data_dictionary['car_id']
    link_to_car = car_data_dictionary['link_to_car']
    car_views = car_data_dictionary['car_views']
    # price = car_data_dictionary['car_price']
    # year = car_data_dictionary['car_year']

    cute_string = f'{order}) Kolesa car ID is: {car_id} -> {link_to_car}  Views: {car_views}  Car-mark: {car_mark}'
    print(cute_string)

    return cute_string


def channel_print_car_data(car_data_dictionary, order=0):
    """–¢–µ–∫—Å—Ç –¥–ª—è —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª–∞, –±–µ—Ä–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ —Å–ª–æ–≤–∞–ª—è car_data_dictionary"""

    car_mark = car_data_dictionary['car_mark']
    car_id = car_data_dictionary['car_id']
    link_to_car = car_data_dictionary['link_to_car']
    car_views = car_data_dictionary['car_views']
    price = car_data_dictionary['car_price']
    year = car_data_dictionary['car_year']

    cute_string = f'üîî *–ù–æ–≤—ã–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å –≥. –ê–ª–º–∞—Ç—ã*\n\n' \
                  f'{order}) Kolesa car ID is: {car_id} ' \
                  f'\n–ú–∞—Ä–∫–∞ –º–∞—à–∏–Ω—ã: *{car_mark} {year} * ' \
                  f'\n–¶–µ–Ω–∞: *{price}* ' \
                  f'\n–ü—Ä–æ—Å–º–æ—Ç—Ä–æ–≤: {car_views}' \
                  f'\n{link_to_car}'

    console_print_car_data(car_data_dictionary, order)
    return cute_string


def get_car_views(car_data_text):
    """
    –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –æ—Ç car-web-element-text –∏ –≤–æ–∑—Ä–∞—â–∞–µ—Ç —Ç–æ–ª—å–∫–æ –∫–æ–ª-–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
    –£ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –º–∞—à–∏–Ω –Ω–∞ –∫–æ–ª–µ—Å–∞, –µ—Å—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å, —ç—Ç–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ –≤ —Å–ø–∏–∫–µ
    """
    return car_data_text[-2] if car_data_text[-2].isdigit() and car_data_text[-1].isdigit() else car_data_text[-1]


def write_cars_on_page():
    """
    –ë–µ—Ä–µ—Ç –≤—Å–µ –≤–µ–±-—ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—à–∏–Ω—ã (car-web-element) –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ (20 –∫–∞—Ä—Ç–æ—á–µ–∫),
    –°–æ–∑–¥–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å car_data_dictionary [keys: car_id, link_to_car, car_views, car_mark]
    """
    try:
        counter = 0
        # –ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫–∏ –º–∞—à–∏–Ω
        cars_on_current_page = browser.find_elements_by_css_selector("div#results > div.row.vw-item.list-item")

        for car in cars_on_current_page:
            # –°–ª–æ–≤–∞—Ä—å —Ö—Ä–∞–Ω–∏—Ç ID, —Å—Å—ã–ª–∫—É –Ω–∞ –º–∞—à–∏–Ω—É, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –∏ –ú–∞—Ä–∫—É –∞–≤—Ç–æ–º–æ–±–∏–ª—è
            car_data_dictionary = {}
            counter += 1

            # ID –º–∞—à–∏–Ω—ã –Ω–∞ –∫–æ–ª—ë—Å–∞
            car_id = car.get_attribute('data-id')
            car_data_dictionary['car_id'] = car_id

            # –°—Å—ã–ª–∫–∞ –Ω–∞ –º–∞—à–∏–Ω—É
            link_to_car = f'https://kolesa.kz/a/show/{car_id}'
            car_data_dictionary['link_to_car'] = link_to_car

            # –í–µ—Å—å —Ç–µ–∫—Å—Ç –∏–∑ –∫–∞—Ä—Ç–æ—á–∫–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è, –Ω–∞ –æ–±—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∞–≤—Ç–æ
            car_data = car.text.split('\n')

            # –¶–µ–Ω–∞ –∏ –≥–æ–¥ –≤—ã–ø—É—Å–∫–∞
            car_data_dictionary['car_price'] = car_data[1] if car_data[0] != '–ù–æ–≤–∞—è' else car_data[2]
            car_data_dictionary['car_year'] = car_data[2][:7] if car_data[0] != '–ù–æ–≤–∞—è' else car_data[3][:7]

            # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
            car_data_dictionary['car_views'] = get_car_views(car_data)
            car_data_dictionary['car_mark'] = car_data[0] if car_data[0] != '–ù–æ–≤–∞—è' else car_data[1]

            # –æ–±—â–∏–π —Å–ø–∏—Å–æ–∫ - —Å–ª–æ–≤–∞—Ä—å –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
            if car_data_dictionary not in all_cars_lst_dic:
                all_cars_lst_dic.append(car_data_dictionary)

            # –í–°–ï –õ–û–ì–ò
            console_print_car_data(car_data_dictionary, counter)

    except common.exceptions.NoSuchElementException:
        print("ERROR: NoSuchElementException")


def submit_new_cars(views=5):
    """
        –§—É–Ω–∫—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä—É–µ—Ç –ø–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞–º views
        –î–æ–±–∞–≤–ª—è–µ—Ç car-dictionary –≤ —Å–ø–∏—Å–æ–∫ sorted_by_views_dic
        –ü–æ—Å—Ç–∏—Ç –≤ –¢–µ–ª–µ–≥—Ä–∞–º–º –Ω–æ–≤—ã–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ already_send_to_channel
    """
    print("\n--------------------FILTER BY VIEWS-----------------\n")
    counter = len(already_send_to_channel) + 1

    for car in all_cars_lst_dic:
        if int(car['car_views']) < views and car not in sorted_by_views_dic:
            sorted_by_views_dic.append(car)
            if car not in already_send_to_channel:
                # –∑–¥–µ—Å—å –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª
                send_car_to_telegram(car, counter)
                counter += 1
    print("\n--------------------END FILTER BY VIEWS-----------------\n")


def send_car_to_telegram(car, counter):
    """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª
        –î–æ–±–∞–≤–ª—è–µ—Ç –≤ —Å–ø–∏—Å–æ–∫ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –≤ –∫–∞–Ω–∞–ª –∞–≤—Ç–æ–º–æ–±–∏–ª–∏
    """
    result_text = channel_print_car_data(car, counter)
    telegram_channel.telegram_bot_send_text(result_text)
    already_send_to_channel.append(car)


if __name__ == "__main__":
    try:
        telegram_channel.telegram_bot_send_text("PARSER STARTED")
        while True:
            for i in range(start_page, end_page):
                go_to_page(i)
                write_cars_on_page()
            submit_new_cars()
            # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∫–∞–∂–¥—ã–µ 60 —Å–µ–∫
            time.sleep(60)
            # –æ—á–∏—Å—Ç–∫–∞ —Å–ø–∏—Å–∫–∞ –æ—Ç –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏–π
            if len(all_cars_lst_dic) > 10_000:
                all_cars_lst_dic = []
                sorted_by_views_dic = []

    finally:
        time.sleep(15)
        browser.quit()

